{
  "problems/909-snakes-and-ladders/solution.py:comment-line:4": "Dummy 0 for 1-based indexing",
  "problems/394-decode-string/solution.py:comment-line:7": "remove \"[\"",
  "problems/1143-longest-common-subsequence/bottom-up-prefix-1d.py:comment-line:1": "keep b the shorter to save space",
  "problems/460-lfu-cache/solution.py:comment-line:5": "key → value",
  "problems/460-lfu-cache/solution.py:comment-line:6": "key → freq",
  "problems/460-lfu-cache/solution.py:comment-line:7": "freq → keys in LRU order",
  "problems/460-lfu-cache/solution.py:comment-line:18": "self.freq[key] = f + 1",
  "problems/363-max-sum-of-rectangle-no-larger-than-k/solution.py:comment-line:11": "Kadane \"extend or restart\"",
  "problems/363-max-sum-of-rectangle-no-larger-than-k/solution.py:comment-line:14": "[Early Exit] cannot beat K",
  "problems/363-max-sum-of-rectangle-no-larger-than-k/solution.py:comment-line:29": "[Early Exit]",
  "problems/363-max-sum-of-rectangle-no-larger-than-k/solution.py:comment-line:35": "find smallest prefix ≥ s-k",
  "problems/363-max-sum-of-rectangle-no-larger-than-k/solution.py:comment-line:39": "[Early Exit]",
  "problems/363-max-sum-of-rectangle-no-larger-than-k/solution.py:comment-line:40": "keep prefixes sorted for future queries",
  "problems/191-number-of-1-bits/brian-kernighan.py:comment-line:3": "drop the lowest set bit",
  "problems/918-maximum-sum-of-circular-subarray/solution.py:comment-line:6": "Kadane (max)",
  "problems/918-maximum-sum-of-circular-subarray/solution.py:comment-line:8": "Kadane (min)",
  "problems/102-binary-tree-level-order-traversal/solution.py:comment-line:10": "Process nodes at the current level",
  "problems/102-binary-tree-level-order-traversal/similar.py:comment-line:7": "queue for BFS traversal",
  "problems/102-binary-tree-level-order-traversal/similar.py:comment-line:9": "collect current level values",
  "problems/102-binary-tree-level-order-traversal/similar.py:comment-line:10": "process all nodes at this level",
  "problems/1514-path-with-maximum-probability/solution.py:comment-line:1": "rob[i] stores max probability to reach node i",
  "problems/1514-path-with-maximum-probability/solution.py:comment-line:2": "Start with full certainty",
  "problems/1514-path-with-maximum-probability/solution.py:comment-line:4": "Perform up to n-1 rounds of relaxation",
  "problems/1514-path-with-maximum-probability/solution.py:comment-line:7": "Try to improve v through u",
  "problems/1514-path-with-maximum-probability/solution.py:comment-line:10": "Try to improve u through v (undirected graph)",
  "problems/1514-path-with-maximum-probability/solution.py:comment-line:14": "Early exit if no updates in this round",
  "problems/200-number-of-islands/solution.py:comment-line:13": "mark as visited",
  "problems/200-number-of-islands/solution.py:comment-line:20": "mark as visited",
  "problems/127-word-ladder/solution.py:comment-line:23": "Use pre-computed neighbors",
  "core/bellman-ford/layered_dag.py:comment-line:9": "k = 0…V-1",
  "core/bellman-ford/layered_dag.py:comment-line:10": "snapshot of δ_k",
  "core/bellman-ford/layered_dag.py:comment-line:14": "now holds δ_{k+1}"
}