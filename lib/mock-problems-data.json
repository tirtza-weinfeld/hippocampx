{
  "problems": [
    {
      "name": "combination_sum",
      "title": "Combination Sum",
      "difficulty": "medium",
      "topics": ["backtrack", "recursion", "array"],
      "definition": "Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target.",
      "url": "https://leetcode.com/problems/combination-sum/",
      "timeComplexity": "$O(2^n)$"
    },
    {
      "name": "n_queens",
      "title": "N-Queens",
      "difficulty": "hard",
      "topics": ["backtrack", "game", "recursion"],
      "definition": "The n-queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other.",
      "url": "https://leetcode.com/problems/n-queens/",
      "timeComplexity": "O(N!)"
    },
    {
      "name": "permutations",
      "title": "Permutations",
      "difficulty": "medium",
      "topics": ["backtrack", "permutation", "recursion"],
      "definition": "Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.",
      "url": "https://leetcode.com/problems/permutations/",
      "timeComplexity": "$O(N \times N!)$"
    },
    {
      "name": "word_search",
      "title": "Word Search",
      "difficulty": "medium",
      "topics": ["backtrack", "matrix", "dfs"],
      "definition": "Given an m x n grid of characters board and a string word, return true if word exists in the grid.",
      "url": "https://leetcode.com/problems/word-search/",
      "timeComplexity": "$O(N \times 4^L)$"
    },
    {
      "name": "coin_change_II",
      "title": "Coin Change II",
      "difficulty": "medium",
      "topics": ["dp", "knapsack", "coins"],
      "definition": "You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money.",
      "url": "https://leetcode.com/problems/coin-change-ii/",
      "timeComplexity": "$O(amount \times coins.length)$"
    },
    {
      "name": "stone_game_III",
      "title": "Stone Game III",
      "difficulty": "hard",
      "topics": ["dp", "game", "minimax"],
      "definition": "Alice and Bob continue their games with piles of stones. There are several stones arranged in a row, and each stone has an associated value.",
      "url": "https://leetcode.com/problems/stone-game-iii/",
      "timeComplexity": "$O(n)$"
    },
    {
      "name": "network_delay_time",
      "title": "Network Delay Time",
      "difficulty": "medium",
      "topics": ["dijkstra", "graph", "shortest-path"],
      "definition": "You are given a network of n nodes, labeled from 1 to n. You are also given times, a list of travel times as directed edges.",
      "url": "https://leetcode.com/problems/network-delay-time/",
      "timeComplexity": "O((V + E) log V)"
    },
    {
      "name": "valid_sudoku",
      "title": "Valid Sudoku",
      "difficulty": "medium",
      "topics": ["games", "matrix", "hash-table"],
      "definition": "Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules.",
      "url": "https://leetcode.com/problems/valid-sudoku/",
      "timeComplexity": "$O(1)$"
    },
    {
      "name": "maximum_subarray",
      "title": "Maximum Subarray",
      "difficulty": "medium",
      "topics": ["kadane", "dp", "array"],
      "definition": "Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.",
      "url": "https://leetcode.com/problems/maximum-subarray/",
      "timeComplexity": "O(n)"
    },
    {
      "name": "best_time_to_buy_and_sell_stock",
      "title": "Best Time to Buy and Sell Stock",
      "difficulty": "easy",
      "topics": ["other", "dp", "array"],
      "definition": "You are given an array prices where prices[i] is the price of a given stock on the ith day.",
      "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
      "timeComplexity": "O(n)"
    },
    {
      "name": "longest_substring_without_repeating_characters",
      "title": "Longest Substring Without Repeating Characters",
      "difficulty": "medium",
      "topics": ["sliding-window", "hash-table", "string"],
      "definition": "Given a string s, find the length of the longest substring without repeating characters.",
      "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
      "timeComplexity": "O(n)"
    },
    {
      "name": "decode_string",
      "title": "Decode String",
      "difficulty": "medium",
      "topics": ["stack", "recursion", "string"],
      "definition": "Given an encoded string, return its decoded string. The encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times.",
      "url": "https://leetcode.com/problems/decode-string/",
      "timeComplexity": "O(maxK × n)"
    },
    {
      "name": "replace_words",
      "title": "Replace Words",
      "difficulty": "medium",
      "topics": ["trie", "string", "array"],
      "definition": "In English, we have a concept called root, which can be followed by some other word to form another longer word - let's call this word successor.",
      "url": "https://leetcode.com/problems/replace-words/",
      "timeComplexity": "O(N)"
    },
    {
      "name": "binary_tree_level_order_traversal",
      "title": "Binary Tree Level Order Traversal",
      "difficulty": "medium",
      "topics": ["bfs", "tree", "queue"],
      "definition": "Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).",
      "url": "https://leetcode.com/problems/binary-tree-level-order-traversal/",
      "timeComplexity": "O(n)"
    },
    {
      "name": "search_insert_position",
      "title": "Search Insert Position",
      "difficulty": "easy",
      "topics": ["binary-search", "array"],
      "definition": "Given a sorted array of distinct integers and a target value, return the index if the target is found.",
      "url": "https://leetcode.com/problems/search-insert-position/",
      "timeComplexity": "$O(log n)$"
    }
  ],
  "topics": [
    { "name": "backtrack", "label": "Backtracking", "count": 4, "color": "#ef4444" },
    { "name": "dp", "label": "Dynamic Programming", "count": 5, "color": "#3b82f6" },
    { "name": "dijkstra", "label": "Dijkstra", "count": 1, "color": "#8b5cf6" },
    { "name": "game", "label": "Game Theory", "count": 2, "color": "#f59e0b" },
    { "name": "games", "label": "Games", "count": 1, "color": "#f59e0b" },
    { "name": "kadane", "label": "Kadane's Algorithm", "count": 1, "color": "#10b981" },
    { "name": "knapsack", "label": "Knapsack", "count": 1, "color": "#ec4899" },
    { "name": "other", "label": "Other", "count": 1, "color": "#6b7280" },
    { "name": "sliding-window", "label": "Sliding Window", "count": 1, "color": "#06b6d4" },
    { "name": "stack", "label": "Stack", "count": 1, "color": "#84cc16" },
    { "name": "trie", "label": "Trie", "count": 1, "color": "#a855f7" },
    { "name": "bfs", "label": "BFS", "count": 1, "color": "#0ea5e9" },
    { "name": "binary-search", "label": "Binary Search", "count": 1, "color": "#7c3aed" },
    { "name": "recursion", "label": "Recursion", "count": 4, "color": "#f97316" },
    { "name": "array", "label": "Array", "count": 4, "color": "#059669" },
    { "name": "matrix", "label": "Matrix", "count": 2, "color": "#dc2626" },
    { "name": "graph", "label": "Graph", "count": 1, "color": "#9333ea" },
    { "name": "hash-table", "label": "Hash Table", "count": 2, "color": "#be185d" },
    { "name": "string", "label": "String", "count": 3, "color": "#0891b2" },
    { "name": "tree", "label": "Tree", "count": 1, "color": "#15803d" }
  ]
}