import { AgentProblemsView, type AgentMetadata } from '@/components/agent'
import { lazy, Suspense, cache } from 'react'

/**
 * Server component - renders all problem cards.
 * Generated by scripts/generate-agent-mdx.ts
 *
 * Architecture (React 19 + Next.js 15.6 streaming):
 * - AgentProblemsView: Client wrapper with filter state, uses use() for promise
 * - Each problem: Pure server component with lazy MDX sections
 * - Filtering: React 19 Activity component handles visibility without re-render
 * - Metadata: Streamed promise, non-blocking
 * - No await blocking, everything streams independently
 */

// Cached metadata loader - returns promise, doesn't block
const getAgentMetadata = cache(() =>
  import('@/lib/extracted-metadata/agent-metadata.json')
    .then(module => module.default as AgentMetadata[])
)

// Lazy imports for all problems
const Problem37SudokuSolver = lazy(() => import('./37-sudoku-solver'))
const Problem1631PathWithMinimumEffort = lazy(() => import('./1631-path-with-minimum-effort'))
const Problem909SnakesAndLadders = lazy(() => import('./909-snakes-and-ladders'))
const Problem265PaintHouseIi = lazy(() => import('./265-paint-house-ii'))
const Problem1TwoSum = lazy(() => import('./1-two-sum'))
const Problem152MaximumProductSubarray = lazy(() => import('./152-maximum-product-subarray'))
const Problem1293ShortestPathInAGridWithObstaclesElimination = lazy(() => import('./1293-shortest-path-in-a-grid-with-obstacles-elimination'))
const Problem648ReplaceWords = lazy(() => import('./648-replace-words'))
const Problem394DecodeString = lazy(() => import('./394-decode-string'))
const Problem211DesignAddAndSearchWordsDataStructure = lazy(() => import('./211-design-add-and-search-words-data-structure'))
const Problem1406StoneGameIii = lazy(() => import('./1406-stone-game-iii'))
const Problem213HouseRobberIi = lazy(() => import('./213-house-robber-ii'))
const Problem875KokoEatingBananas = lazy(() => import('./875-koko-eating-bananas'))
const Problem1143LongestCommonSubsequence = lazy(() => import('./1143-longest-common-subsequence'))
const Problem460LfuCache = lazy(() => import('./460-lfu-cache'))
const Problem133CloneGraph = lazy(() => import('./133-clone-graph'))
const Problem238ProductOfArrayExceptSelf = lazy(() => import('./238-product-of-array-except-self'))
const Problem523ContinuousSubarraySum = lazy(() => import('./523-continuous-subarray-sum'))
const Problem547NumberOfProvinces = lazy(() => import('./547-number-of-provinces'))
const Problem518CoinChangeIi = lazy(() => import('./518-coin-change-ii'))
const Problem416PartitionEqualSubsetSum = lazy(() => import('./416-partition-equal-subset-sum'))
const Problem188BestTimeToBuyAndSellStockIv = lazy(() => import('./188-best-time-to-buy-and-sell-stock-iv'))
const Problem20ValidParentheses = lazy(() => import('./20-valid-parentheses'))
const Problem370RangeAddition = lazy(() => import('./370-range-addition'))
const Problem120Triangle = lazy(() => import('./120-triangle'))
const Problem787CheapestFlightsWithinKStops = lazy(() => import('./787-cheapest-flights-within-k-stops'))
const Problem363MaxSumOfRectangleNoLargerThanK = lazy(() => import('./363-max-sum-of-rectangle-no-larger-than-k'))
const Problem778SwimInRisingWater = lazy(() => import('./778-swim-in-rising-water'))
const Problem525ContiguousArray = lazy(() => import('./525-contiguous-array'))
const Problem3LongestSubstringWithoutRepeatingCharacters = lazy(() => import('./3-longest-substring-without-repeating-characters'))
const Problem51NQueens = lazy(() => import('./51-n-queens'))
const Problem560SubarraySumEqualsK = lazy(() => import('./560-subarray-sum-equals-k'))
const Problem312BurstBalloons = lazy(() => import('./312-burst-balloons'))
const Problem1590MakeSumDivisibleByP = lazy(() => import('./1590-make-sum-divisible-by-p'))
const Problem191NumberOf1Bits = lazy(() => import('./191-number-of-1-bits'))
const Problem70ClimbingStairs = lazy(() => import('./70-climbing-stairs'))
const Problem918MaximumSumOfCircularSubarray = lazy(() => import('./918-maximum-sum-of-circular-subarray'))
const Problem215KthLargestElementInAnArray = lazy(() => import('./215-kth-largest-element-in-an-array'))
const Problem198HouseRobber = lazy(() => import('./198-house-robber'))
const Problem146LruCache = lazy(() => import('./146-lru-cache'))
const Problem102BinaryTreeLevelOrderTraversal = lazy(() => import('./102-binary-tree-level-order-traversal'))
const Problem974SubarraySumsDivisibleByK = lazy(() => import('./974-subarray-sums-divisible-by-k'))
const Problem122BestTimeToBuyAndSellStockIi = lazy(() => import('./122-best-time-to-buy-and-sell-stock-ii'))
const Problem33SearchInRotatedSortedArray = lazy(() => import('./33-search-in-rotated-sorted-array'))
const Problem124BinaryTreeMaximumPathSum = lazy(() => import('./124-binary-tree-maximum-path-sum'))
const Problem1510StoneGameIv = lazy(() => import('./1510-stone-game-iv'))
const Problem153FindMinimumInRotatedSortedArray = lazy(() => import('./153-find-minimum-in-rotated-sorted-array'))
const Problem994RottingOranges = lazy(() => import('./994-rotting-oranges'))
const Problem1547MinimumCostToCutAStick = lazy(() => import('./1547-minimum-cost-to-cut-a-stick'))
const Problem121BestTimeToBuyAndSellStock = lazy(() => import('./121-best-time-to-buy-and-sell-stock'))
const Problem53MaximumSubarray = lazy(() => import('./53-maximum-subarray'))
const Problem1570DotProductOfTwoSparseVectors = lazy(() => import('./1570-dot-product-of-two-sparse-vectors'))
const Problem34FindFirstAndLastPositionOfElementInSortedArray = lazy(() => import('./34-find-first-and-last-position-of-element-in-sorted-array'))
const Problem76MinimumWindowSubstring = lazy(() => import('./76-minimum-window-substring'))
const Problem84LargestRectangleInHistogram = lazy(() => import('./84-largest-rectangle-in-histogram'))
const Problem136SingleNumber = lazy(() => import('./136-single-number'))
const Problem1514PathWithMaximumProbability = lazy(() => import('./1514-path-with-maximum-probability'))
const Problem72EditDistance = lazy(() => import('./72-edit-distance'))
const Problem79WordSearch = lazy(() => import('./79-word-search'))
const Problem39CombinationSum = lazy(() => import('./39-combination-sum'))
const Problem256PaintHouse = lazy(() => import('./256-paint-house'))
const Problem54201Matrix = lazy(() => import('./542-01-matrix'))
const Problem1011CapacityToShipPackagesWithinDDays = lazy(() => import('./1011-capacity-to-ship-packages-within-d-days'))
const Problem208ImplementTriePrefixTree = lazy(() => import('./208-implement-trie-prefix-tree'))
const Problem1000MinimumCostToMergeStones = lazy(() => import('./1000-minimum-cost-to-merge-stones'))
const Problem325MaximumSizeSubarraySumEqualsK = lazy(() => import('./325-maximum-size-subarray-sum-equals-k'))
const Problem2145CountTheHiddenSequences = lazy(() => import('./2145-count-the-hidden-sequences'))
const Problem35SearchInsertPosition = lazy(() => import('./35-search-insert-position'))
const Problem46Permutations = lazy(() => import('./46-permutations'))
const Problem123BestTimeToBuyAndSellStockIii = lazy(() => import('./123-best-time-to-buy-and-sell-stock-iii'))
const Problem347TopKFrequentElements = lazy(() => import('./347-top-k-frequent-elements'))
const Problem64MinimumPathSum = lazy(() => import('./64-minimum-path-sum'))
const Problem200NumberOfIslands = lazy(() => import('./200-number-of-islands'))
const Problem841KeysAndRooms = lazy(() => import('./841-keys-and-rooms'))
const Problem2140SolvingQuestionsWithBrainpower = lazy(() => import('./2140-solving-questions-with-brainpower'))
const Problem212WordSearchIi = lazy(() => import('./212-word-search-ii'))
const Problem713SubarrayProductLessThanK = lazy(() => import('./713-subarray-product-less-than-k'))
const Problem36ValidSudoku = lazy(() => import('./36-valid-sudoku'))
const Problem743NetworkDelayTime = lazy(() => import('./743-network-delay-time'))
const Problem127WordLadder = lazy(() => import('./127-word-ladder'))

// Problem components mapped by ID for O(1) lookup
const problemComponents = {
    "37-sudoku-solver": (
      <Suspense key="37-sudoku-solver" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem37SudokuSolver />
      </Suspense>
    ),
    "1631-path-with-minimum-effort": (
      <Suspense key="1631-path-with-minimum-effort" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1631PathWithMinimumEffort />
      </Suspense>
    ),
    "909-snakes-and-ladders": (
      <Suspense key="909-snakes-and-ladders" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem909SnakesAndLadders />
      </Suspense>
    ),
    "265-paint-house-ii": (
      <Suspense key="265-paint-house-ii" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem265PaintHouseIi />
      </Suspense>
    ),
    "1-two-sum": (
      <Suspense key="1-two-sum" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1TwoSum />
      </Suspense>
    ),
    "152-maximum-product-subarray": (
      <Suspense key="152-maximum-product-subarray" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem152MaximumProductSubarray />
      </Suspense>
    ),
    "1293-shortest-path-in-a-grid-with-obstacles-elimination": (
      <Suspense key="1293-shortest-path-in-a-grid-with-obstacles-elimination" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1293ShortestPathInAGridWithObstaclesElimination />
      </Suspense>
    ),
    "648-replace-words": (
      <Suspense key="648-replace-words" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem648ReplaceWords />
      </Suspense>
    ),
    "394-decode-string": (
      <Suspense key="394-decode-string" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem394DecodeString />
      </Suspense>
    ),
    "211-design-add-and-search-words-data-structure": (
      <Suspense key="211-design-add-and-search-words-data-structure" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem211DesignAddAndSearchWordsDataStructure />
      </Suspense>
    ),
    "1406-stone-game-iii": (
      <Suspense key="1406-stone-game-iii" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1406StoneGameIii />
      </Suspense>
    ),
    "213-house-robber-ii": (
      <Suspense key="213-house-robber-ii" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem213HouseRobberIi />
      </Suspense>
    ),
    "875-koko-eating-bananas": (
      <Suspense key="875-koko-eating-bananas" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem875KokoEatingBananas />
      </Suspense>
    ),
    "1143-longest-common-subsequence": (
      <Suspense key="1143-longest-common-subsequence" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1143LongestCommonSubsequence />
      </Suspense>
    ),
    "460-lfu-cache": (
      <Suspense key="460-lfu-cache" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem460LfuCache />
      </Suspense>
    ),
    "133-clone-graph": (
      <Suspense key="133-clone-graph" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem133CloneGraph />
      </Suspense>
    ),
    "238-product-of-array-except-self": (
      <Suspense key="238-product-of-array-except-self" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem238ProductOfArrayExceptSelf />
      </Suspense>
    ),
    "523-continuous-subarray-sum": (
      <Suspense key="523-continuous-subarray-sum" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem523ContinuousSubarraySum />
      </Suspense>
    ),
    "547-number-of-provinces": (
      <Suspense key="547-number-of-provinces" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem547NumberOfProvinces />
      </Suspense>
    ),
    "518-coin-change-ii": (
      <Suspense key="518-coin-change-ii" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem518CoinChangeIi />
      </Suspense>
    ),
    "416-partition-equal-subset-sum": (
      <Suspense key="416-partition-equal-subset-sum" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem416PartitionEqualSubsetSum />
      </Suspense>
    ),
    "188-best-time-to-buy-and-sell-stock-iv": (
      <Suspense key="188-best-time-to-buy-and-sell-stock-iv" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem188BestTimeToBuyAndSellStockIv />
      </Suspense>
    ),
    "20-valid-parentheses": (
      <Suspense key="20-valid-parentheses" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem20ValidParentheses />
      </Suspense>
    ),
    "370-range-addition": (
      <Suspense key="370-range-addition" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem370RangeAddition />
      </Suspense>
    ),
    "120-triangle": (
      <Suspense key="120-triangle" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem120Triangle />
      </Suspense>
    ),
    "787-cheapest-flights-within-k-stops": (
      <Suspense key="787-cheapest-flights-within-k-stops" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem787CheapestFlightsWithinKStops />
      </Suspense>
    ),
    "363-max-sum-of-rectangle-no-larger-than-k": (
      <Suspense key="363-max-sum-of-rectangle-no-larger-than-k" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem363MaxSumOfRectangleNoLargerThanK />
      </Suspense>
    ),
    "778-swim-in-rising-water": (
      <Suspense key="778-swim-in-rising-water" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem778SwimInRisingWater />
      </Suspense>
    ),
    "525-contiguous-array": (
      <Suspense key="525-contiguous-array" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem525ContiguousArray />
      </Suspense>
    ),
    "3-longest-substring-without-repeating-characters": (
      <Suspense key="3-longest-substring-without-repeating-characters" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem3LongestSubstringWithoutRepeatingCharacters />
      </Suspense>
    ),
    "51-n-queens": (
      <Suspense key="51-n-queens" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem51NQueens />
      </Suspense>
    ),
    "560-subarray-sum-equals-k": (
      <Suspense key="560-subarray-sum-equals-k" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem560SubarraySumEqualsK />
      </Suspense>
    ),
    "312-burst-balloons": (
      <Suspense key="312-burst-balloons" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem312BurstBalloons />
      </Suspense>
    ),
    "1590-make-sum-divisible-by-p": (
      <Suspense key="1590-make-sum-divisible-by-p" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1590MakeSumDivisibleByP />
      </Suspense>
    ),
    "191-number-of-1-bits": (
      <Suspense key="191-number-of-1-bits" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem191NumberOf1Bits />
      </Suspense>
    ),
    "70-climbing-stairs": (
      <Suspense key="70-climbing-stairs" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem70ClimbingStairs />
      </Suspense>
    ),
    "918-maximum-sum-of-circular-subarray": (
      <Suspense key="918-maximum-sum-of-circular-subarray" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem918MaximumSumOfCircularSubarray />
      </Suspense>
    ),
    "215-kth-largest-element-in-an-array": (
      <Suspense key="215-kth-largest-element-in-an-array" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem215KthLargestElementInAnArray />
      </Suspense>
    ),
    "198-house-robber": (
      <Suspense key="198-house-robber" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem198HouseRobber />
      </Suspense>
    ),
    "146-lru-cache": (
      <Suspense key="146-lru-cache" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem146LruCache />
      </Suspense>
    ),
    "102-binary-tree-level-order-traversal": (
      <Suspense key="102-binary-tree-level-order-traversal" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem102BinaryTreeLevelOrderTraversal />
      </Suspense>
    ),
    "974-subarray-sums-divisible-by-k": (
      <Suspense key="974-subarray-sums-divisible-by-k" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem974SubarraySumsDivisibleByK />
      </Suspense>
    ),
    "122-best-time-to-buy-and-sell-stock-ii": (
      <Suspense key="122-best-time-to-buy-and-sell-stock-ii" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem122BestTimeToBuyAndSellStockIi />
      </Suspense>
    ),
    "33-search-in-rotated-sorted-array": (
      <Suspense key="33-search-in-rotated-sorted-array" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem33SearchInRotatedSortedArray />
      </Suspense>
    ),
    "124-binary-tree-maximum-path-sum": (
      <Suspense key="124-binary-tree-maximum-path-sum" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem124BinaryTreeMaximumPathSum />
      </Suspense>
    ),
    "1510-stone-game-iv": (
      <Suspense key="1510-stone-game-iv" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1510StoneGameIv />
      </Suspense>
    ),
    "153-find-minimum-in-rotated-sorted-array": (
      <Suspense key="153-find-minimum-in-rotated-sorted-array" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem153FindMinimumInRotatedSortedArray />
      </Suspense>
    ),
    "994-rotting-oranges": (
      <Suspense key="994-rotting-oranges" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem994RottingOranges />
      </Suspense>
    ),
    "1547-minimum-cost-to-cut-a-stick": (
      <Suspense key="1547-minimum-cost-to-cut-a-stick" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1547MinimumCostToCutAStick />
      </Suspense>
    ),
    "121-best-time-to-buy-and-sell-stock": (
      <Suspense key="121-best-time-to-buy-and-sell-stock" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem121BestTimeToBuyAndSellStock />
      </Suspense>
    ),
    "53-maximum-subarray": (
      <Suspense key="53-maximum-subarray" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem53MaximumSubarray />
      </Suspense>
    ),
    "1570-dot-product-of-two-sparse-vectors": (
      <Suspense key="1570-dot-product-of-two-sparse-vectors" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1570DotProductOfTwoSparseVectors />
      </Suspense>
    ),
    "34-find-first-and-last-position-of-element-in-sorted-array": (
      <Suspense key="34-find-first-and-last-position-of-element-in-sorted-array" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem34FindFirstAndLastPositionOfElementInSortedArray />
      </Suspense>
    ),
    "76-minimum-window-substring": (
      <Suspense key="76-minimum-window-substring" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem76MinimumWindowSubstring />
      </Suspense>
    ),
    "84-largest-rectangle-in-histogram": (
      <Suspense key="84-largest-rectangle-in-histogram" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem84LargestRectangleInHistogram />
      </Suspense>
    ),
    "136-single-number": (
      <Suspense key="136-single-number" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem136SingleNumber />
      </Suspense>
    ),
    "1514-path-with-maximum-probability": (
      <Suspense key="1514-path-with-maximum-probability" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1514PathWithMaximumProbability />
      </Suspense>
    ),
    "72-edit-distance": (
      <Suspense key="72-edit-distance" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem72EditDistance />
      </Suspense>
    ),
    "79-word-search": (
      <Suspense key="79-word-search" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem79WordSearch />
      </Suspense>
    ),
    "39-combination-sum": (
      <Suspense key="39-combination-sum" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem39CombinationSum />
      </Suspense>
    ),
    "256-paint-house": (
      <Suspense key="256-paint-house" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem256PaintHouse />
      </Suspense>
    ),
    "542-01-matrix": (
      <Suspense key="542-01-matrix" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem54201Matrix />
      </Suspense>
    ),
    "1011-capacity-to-ship-packages-within-d-days": (
      <Suspense key="1011-capacity-to-ship-packages-within-d-days" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1011CapacityToShipPackagesWithinDDays />
      </Suspense>
    ),
    "208-implement-trie-prefix-tree": (
      <Suspense key="208-implement-trie-prefix-tree" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem208ImplementTriePrefixTree />
      </Suspense>
    ),
    "1000-minimum-cost-to-merge-stones": (
      <Suspense key="1000-minimum-cost-to-merge-stones" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem1000MinimumCostToMergeStones />
      </Suspense>
    ),
    "325-maximum-size-subarray-sum-equals-k": (
      <Suspense key="325-maximum-size-subarray-sum-equals-k" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem325MaximumSizeSubarraySumEqualsK />
      </Suspense>
    ),
    "2145-count-the-hidden-sequences": (
      <Suspense key="2145-count-the-hidden-sequences" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem2145CountTheHiddenSequences />
      </Suspense>
    ),
    "35-search-insert-position": (
      <Suspense key="35-search-insert-position" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem35SearchInsertPosition />
      </Suspense>
    ),
    "46-permutations": (
      <Suspense key="46-permutations" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem46Permutations />
      </Suspense>
    ),
    "123-best-time-to-buy-and-sell-stock-iii": (
      <Suspense key="123-best-time-to-buy-and-sell-stock-iii" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem123BestTimeToBuyAndSellStockIii />
      </Suspense>
    ),
    "347-top-k-frequent-elements": (
      <Suspense key="347-top-k-frequent-elements" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem347TopKFrequentElements />
      </Suspense>
    ),
    "64-minimum-path-sum": (
      <Suspense key="64-minimum-path-sum" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem64MinimumPathSum />
      </Suspense>
    ),
    "200-number-of-islands": (
      <Suspense key="200-number-of-islands" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem200NumberOfIslands />
      </Suspense>
    ),
    "841-keys-and-rooms": (
      <Suspense key="841-keys-and-rooms" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem841KeysAndRooms />
      </Suspense>
    ),
    "2140-solving-questions-with-brainpower": (
      <Suspense key="2140-solving-questions-with-brainpower" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem2140SolvingQuestionsWithBrainpower />
      </Suspense>
    ),
    "212-word-search-ii": (
      <Suspense key="212-word-search-ii" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem212WordSearchIi />
      </Suspense>
    ),
    "713-subarray-product-less-than-k": (
      <Suspense key="713-subarray-product-less-than-k" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem713SubarrayProductLessThanK />
      </Suspense>
    ),
    "36-valid-sudoku": (
      <Suspense key="36-valid-sudoku" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem36ValidSudoku />
      </Suspense>
    ),
    "743-network-delay-time": (
      <Suspense key="743-network-delay-time" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem743NetworkDelayTime />
      </Suspense>
    ),
    "127-word-ladder": (
      <Suspense key="127-word-ladder" fallback={<div className="p-4 text-gray-500">Loading...</div>}>
        <Problem127WordLadder />
      </Suspense>
    )
  }

export default async function Agent() {
  const agentMetadata = await getAgentMetadata()

  return (
    <AgentProblemsView
      metadata={agentMetadata}
      problemComponents={problemComponents}
    />
  )
}
