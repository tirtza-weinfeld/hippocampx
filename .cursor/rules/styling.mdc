---
description: Styling Rules
globs: 
alwaysApply: false
---
# React & Next.js Styling & Animations Guide (June 2025)

## Tailwind CSS v4.1

* **Setup:** zero-config via `@import "tailwindcss"` in global CSS.
* **Design Tokens:** configure with `@theme` in CSS; use OKLCH color tokens.
* **Container Queries:** apply `@container` and size variants (`@sm`, `@md`, etc.) for true component responsivity.
* **Dark/Light Mode:** toggle with `class="dark"`; support `media (prefers-color-scheme)`; persist user choice (e.g., `localStorage`).

## Framer Motion

* **Import:** `import { motion, useReducedMotion } from 'framer-motion'`.
* **Usage:**

  * Wrap elements in `motion.*` components (e.g., `motion.div`).
  * Define `initial`, `animate`, `exit`, and shared `variants`.
  * Use `whileHover`, `whileTap`, and `layout` for interactive states.
* **Accessibility:** detect `useReducedMotion()` and disable/adjust animations accordingly.
* **Performance:** keep durations ≤ 300ms; leverage CSS GPU-accelerated transforms.

## Design Tokens & Theming

* Define colors, fonts, and breakpoints as CSS variables via `@theme`.
* Reference tokens in CSS with `var(--token-name)` or auto-generated utilities (e.g., `text-primary`).

## Accessibility & Best Practices

* **Contrast:** ensure color contrast meets WCAG AA.
* **Focus States:** maintain visible focus outlines; avoid removing outlines without replacement.
* **Semantic HTML:** use appropriate tags (`<button>`, `<nav>`, `<header>`).
* **ARIA Roles:** add roles only when native semantics are insufficient.
* **Animations:** avoid motion sickness; honor `prefers-reduced-motion`; use easing with CSS `cubic-bezier` tokens.
* **Styles Organization:**

  * Avoid inline styles; use utility classes.
  * Co-locate component-specific styles.
  * Keep CSS atomic and scoped; avoid global overrides.

*Last updated June 2025*
