
:is(.line-highlight) {
  display: inline-block;
  width: 100%;
  /* Default background for lines without step colors */
  background: linear-gradient(
    to right,
    transparent 0%,
    --alpha(var(--color-teal-500) / 10%),
    --alpha(var(--color-blue-500) / 10%),
    --alpha(var(--color-sky-500) / 10%),
    --alpha(var(--color-teal-500) / 10%),
    transparent 100%
  );
}

/* Line highlighting with step colors */
:is(.line-highlight[data-step]) {
  background: linear-gradient(
    to right,
    transparent 0%,
    --alpha(var(--step-background) / 30%),
    --alpha(var(--step-border) / 20%),
    --alpha(var(--step-background) / 30%),
    transparent 100%
  );
  border-left: 3px solid var(--step-border);
  padding-left: 10px;
  margin-left: -10px;
}

/* styles/components/code-block.css or similar */
pre .line {
  line-height: 1.5rem;
  /* background-color: red; */
}

pre .line:is(.line-numbers *):not(:is(::before)) {
  margin-left: 2rem;
  /* background-color: blue; */
}
pre .line:is(.line-numbers *):is(.comment-symbol)::before {
  color: var(--color-green-500);


}
pre .line:is(.line-numbers *)::before {
  content: counter(line);
  counter-increment: line;
  position: absolute;
  left: 0;
  width: 3rem;
  text-align: left;
  /* width: 3em;
  text-align: right; */
  color: var(--color-gray-400);

  user-select: none;
  font-size: 0.9em;
  opacity: 0.7;
  /* padding-right: 1em; */
  /* background-color: blue; */
  line-height: 1rem;
  place-self: center;
}
/* Reset the counter at the start of each code block */
pre {
  counter-reset: line;
}

/* Popover keywords use unified step system */
.popover-keyword[data-step] {
  color: var(--step-text) !important;
}

/* Default popover and highlight (no step) use a calm green/teal gradient */
.popover-keyword-default {
  color: var(--color--800) !important;
}
.dark .popover-keyword-default {
  color: var(--color-teal-200) !important;
}

/* Default popover background (no step) */
.popover-default-bg {
  background: linear-gradient(
    135deg,
    var(--color-sky-200) 0%,
    var(--color-sky-400) 100%
  );
  color: #111;
}
.dark .popover-default-bg {
  background: linear-gradient(
    135deg,
    var(--color-sky-700) 0%,
    var(--color-sky-900) 100%
  );
  color: #fff;
}

/* Code tooltip styling */
.code-tooltip {
  cursor: pointer;
  text-decoration: underline;
  text-decoration-style: dotted;
  text-decoration-color: rgba(59, 130, 246, 0.5);
  text-underline-offset: 2px;
  transition: all 0.2s ease-in-out;
}

.code-tooltip:hover {
  text-decoration-color: rgb(59, 130, 246);
  background-color: rgba(59, 130, 246, 0.1);
  border-radius: 2px;
}

.code-tooltip:focus {
  outline: 2px solid rgb(59, 130, 246);
  outline-offset: 1px;
  border-radius: 2px;
}

/* Dark mode adjustments */
.dark .code-tooltip {
  text-decoration-color: rgba(96, 165, 250, 0.5);
}

.dark .code-tooltip:hover {
  text-decoration-color: rgb(96, 165, 250);
  background-color: rgba(96, 165, 250, 0.1);
}

.dark .code-tooltip:focus {
  outline-color: rgb(96, 165, 250);
}

/* Animation for tooltip appearance */
@keyframes fade-in {
  from {
    opacity: 0;
    transform: translate(-50%, -100%) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -100%) scale(1);
  }
}

.animate-fade-in {
  animation: fade-in 0.15s ease-out;
}

/* Word highlighting uses unified step system */
.word-highlight,
.word-highlight > * {
  color: var(--step) !important;

  background-image: var(--step-background);
  background-size: 200% 100%;
  background-position: 0% 50%;
  &:hover {
    background-position: 100% 50%;
  }
  border-radius: 0.8rem;
  font-weight: 600;
  padding-inline: 0.2rem;
}

:root {
  --symbol-color: var(--color-blue-600);
  .parameter-symbol {
    --symbol-color: var(--color-blue-600);
    .dark & {
      --symbol-color: var(--color-blue-400);
    }
  }
  .variable-symbol {
    --symbol-color: var(--color-purple-600);
    .dark & {
      --symbol-color: var(--color-purple-400);
    }
  }
  .function-symbol {
    --symbol-color: var(--color-yellow-500);
    .dark & {
      --symbol-color: var(--color-yellow-400);
    }
  }
  .method-symbol {
    --symbol-color: var(--color-orange-500);
    .dark & {
      --symbol-color: var(--color-orange-400);
    }
  }
  .class-symbol {
    --symbol-color: var(--color-teal-500);
    .dark & {
      --symbol-color: var(--color-teal-400);
    }
  }
  .expression-symbol {
    --symbol-color: var(--color-cyan-500);
    .dark & {
      --symbol-color: var(--color-cyan-400);
    }
  }

  .comment-symbol {
    --symbol-color: var(--color-green-500);
    .dark & {
      --symbol-color: var(--color-green-400);
    }
  }
}


/* .comment-symbol{
  background-color: --alpha(var(--symbol-color) / 50%);
:before{
    content: 'ðŸ’¬';
    position: absolute;
    left: 2;
    width: 3rem;
    text-align: center;
    color: var(--color-gray-400);
    user-select: none;
    font-size: 0.9em;
    opacity: 0.7;
    line-height: 1rem;
    place-self: center;
  }
   
} */
/* Tooltip symbol styling */
.tooltip-symbol {
  cursor: pointer;
  text-underline-offset: 2px;
  transition: all 0.2s ease-in-out;

/*  
  &:is(.comment-symbol) {
    background-color: --alpha(var(--symbol-color) / 50%);
  
  } */


  
/* .expression-symbol {
  &:hover {
  
   &:is(.tooltip-symbol) {
    background-color: --alpha(var(--symbol-color) / 80%);

  }
  }
} */
  &:is( .expression-symbol> .tooltip-symbol) {
    border-radius: 2rem;
    border-bottom: 2px dotted;

     border-color: --alpha(var(--symbol-color) / 70%);
    /* border-color: var(--symbol-color); */

     /* background-color: --alpha(var(--symbol-color) / 50%); */

  }
  /* &:not(.comment-symbol , .expression-symbol> .tooltip-symbol) { */
  &:not(.comment-symbol ) {
    border-radius: 2rem;
    border-bottom: 2px dotted;

    border-color: var(--symbol-color);
  /* &:hover {
    background-color: --alpha(var(--symbol-color) / 50%);
    
  } */
}
  &:not(.comment-symbol) {

  &:hover {
    background-color: --alpha(var(--symbol-color) / 20%);
    /* &:is(.expression-symbol> .tooltip-symbol) { */
    /* &:is(.expression-symbol> .tooltip-symbol) { */
    &:is(.tooltip-symbol> .tooltip-symbol) {

    /* padding-inline: 0.2rem; */
    }
  }
}

}
/* Inline code with step highlighting */
/* code[data-step] {

  color: var(--step-text) !important;
  background: --alpha(var(--step-background) / 50%) !important;
  font-weight: 600;
} */
